generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_URL")
  directUrl = env("POSTGRES_URL_NON_POOLING")
}

model User {
  id        Int      @id @default(autoincrement())
  fullname  String
  email     String   @unique
  password  String
  cart      Cart[]
  orders    Order[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Category {
  id       Int       @id @default(autoincrement())
  name     String    @unique
  products Product[]
}

model Product {
  id           Int           @id @default(autoincrement())
  name         String
  imageUrl     String
  items        ProductItem[]
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  Category     Category?     @relation(fields: [categoryId], references: [id])
  categoryId   Int?
  Ingredient   Ingredient?   @relation(fields: [ingredientId], references: [id])
  ingredientId Int?
}

model Ingredient {
  id         Int       @id @default(autoincrement())
  name       String
  price      Int
  imageUrl   String
  products   Product[]
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  CartItem   CartItem? @relation(fields: [cartItemId], references: [id])
  cartItemId Int?
}

model ProductItem {
  id        Int        @id @default(autoincrement())
  price     Int
  size      Int?
  pizzaType Int?
  cartItems CartItem[]
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  Product   Product?   @relation(fields: [productId], references: [id])
  productId Int?
}

model Cart {
  id          Int        @id @default(autoincrement())
  items       CartItem[]
  token       String
  totalAmount Int        @default(0)
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  User        User?      @relation(fields: [userId], references: [id])
  userId      Int?
}

model CartItem {
  id          Int          @id @default(autoincrement())
  quantity    Int
  ingredients Ingredient[]

  createdAt     DateTime     @default(now())
  updatedAt     DateTime     @updatedAt
  ProductItem   ProductItem? @relation(fields: [productItemId], references: [id])
  productItemId Int?
  Cart          Cart         @relation(fields: [cartId], references: [id])
  cartId        Int
}

model Order {
  id Int @id @default(autoincrement())

  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  User        User?       @relation(fields: [userId], references: [id])
  userId      Int?
  tokem       String
  totalAmount Int
  status      OrderStatus @default(PENDING)
  paymentId   String?
  items       Json
  fullName    String
  address     String
  email       String
  phone       String
  comment     String
}

enum OrderStatus {
  PENDING
  SUCCEEDED
  CANCELED
}
